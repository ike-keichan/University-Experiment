%% 課題プログラムのタイトルと説明
% SAMPLE1  - 単語刺激を入力ファイルから読込んで画面呈示する課題プログラム

%% 課題プログラムの初期設定

%1280x1024,白色,文字色：黒色
config_display(0, 4, [1 1 1], [0 0 0], 'Helvetica', 50, 4, 0)

% 1024x768,黄色
% config_display(0, 3, [1 1 0], [1 1 1], 'Helvetica', 50, 4, 0)

% 800x600,青色
% config_display(0, 2, [0 0 1], [1 1 1], 'Helvetica', 50, 4, 0)

% スクリーンの初期設定
% デフォルトの引数は 
% config_display(1, 1, [0 0 0], [1 1 1], 'Helvetica', 50, 4, 0)

%% 演習１ 画面制御 %%%%%%%%%%%%%%%%%%%%%%%%%
% config_displayの引数を変更して、下記を実現させよう
% １．スクリーンをウィンドウモードに
% ２．解像度を 800x600、1024x768、1280x1024に
% ３．バックグラウンド色を青、黄色、白に
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

config_data( 'mysample1.dat' ); % 入力データファイルを sample1.dat に指定して初期設定

%% 演習２ 入力ファイル %%%%%%%%%%%%%%%%%%%%%
% sample1.dat をエディタで開き、
% １．単語を数字の１、２などに変更し、別名保存
% ２．confing_data で 変更したファイルを指定
% ３．プログラムを実行して、変更した通りに
% 　　画面表示が変わるかどうか確認してみよう
%
% 日本語の文字は表示できるか？
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% cogent toolboxの起動
start_cogent; % cogent関数起動（スクリーン、タイマー、キーボードバッファなど）

%フォント色：青色
setforecolour( 0, 0, 1); 

%フォント色：紫色
%setforecolour( 1, 0, 1); 

%ゴシック体, 100px
settextstyle( 'ゴシック', 100);

%ゴシック体, 25px
%settextstyle( 'ゴシック', 25);

%% 課題試行のメインループ
for i = 1:countdatarows % 課題試行のメインループを入力データファイルの行数分繰り返し
   
   % 入力ファイルの i 行 1 列目のデータを変数 word に読込み   
   word = getdata( i, 1 );
   
   % スクリーンバッファ 1 の内容を消去しておく
   clearpict( 1 ); 

   % SETFORECOLOUR, SETTEXTSTYLE
   % setforecolour( R (= 0〜1), G (= 0〜1), B (= 0〜1) ); 
                   % 直後のpreparestringのフォント色をRGBで定義
   % settextstyle( 'font名', fontsize );
                   % 直後のpreparestringのフォント名と大きさを定義
   
   % スクリーンバッファ 1 に変数 word に読込んだ単語刺激を書込み                
   preparestring( word, 1 ); 
   
%% 演習３ 画面制御 %%%%%%%%%%%%%%%%%%%%%%%%%
% setforecolour および settextstyleを用いて、下記
% を実現させよう
% １．単語の表示色を紫、緑に
% ２．単語のフォントを ゴシック に
% ３．単語のフォントサイズを25、100に
%
% config_display の引数によって同様の設定は可能か？
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

   % 刺激単語が書かれているスクリーンバッファ 1 を画面に表示
   t1 = drawpict( 1 );
   
   % 刺激が表示された状態で 2000 ms 待機
   % wait(2000);
   
   % 刺激が表示された状態で 500 ms 待機
   % wait(500);
   
   % 刺激が表示された状態で 1000 ms 待機
   % wait( 1000 );
   
   % 刺激が表示された状態で 500 ms 待機
   waituntil(t1 + 500);
   
   % 刺激が表示された状態で 1000 ms 待機
   % waituntil(t1 + 1000);
   
%% 演習４ 時間制御 %%%%%%%%%%%%%%%%%%%%%%%%%
% １．waitの引数を変更して、単語表示時間を500ms、2s
% 　　にしよう
% ２．drawpict( 1 ) の時刻を t1 に代入しておき、
% 　　wait の代わりに waituntil を用いて単語表示時間を
%     t1 から 1秒後まで、0.5秒後まで などに設定してみよう
% ３．下の drawpict( 2 ) の時刻を t2 に代入し、その後に
%     t2 - t1 を計算、表示させてみよう。
%
% 　　t2 - t1 の値は何を意味するか？
%     上の waituntil で設定した待ち時間と同じか違うか？
% 　　違う場合には、なぜそのような違いが生じるか？
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

   % 何も書かれていないスクリーンバッファ 2 を画面に表示
   % （つまり、刺激画面を消去）
   t2 = drawpict( 2 );  
   
   t21 = t2 - t1;
   
   t3 = time;
   
   % 刺激が消えた状態で 2000 ms 待機
   % wait(2000);
   
   % 刺激が消えた状態で 500 ms 待機
    wait(500);
   
   % 刺激が消えた状態で 1000 ms 待機
   % wait( 1000 );
   
   t4 = time;
   
   t43 = t4 - t3;

%% 演習５ 時間制御 %%%%%%%%%%%%%%%%%%%%%%%%%
% １．waitの引数を変更してみよう。何が変わるか？
% ２．timeコマンドを用いて、waitの直前の時刻を t3 に、
%     直後の時刻を t4 にそれぞれ代入し、t4 - t3 の値を
% 　　計算、表示させてみよう。
% 　　
%     この値はwaitで設定した値と同じか違うか？
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   
end % 試行のメインループの最後

%% cogent toolboxの終了
stop_cogent; % cogent関数終了